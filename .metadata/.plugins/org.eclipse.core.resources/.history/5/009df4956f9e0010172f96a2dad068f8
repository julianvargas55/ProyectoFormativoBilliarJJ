package sena.jj.com.service; 

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional; // Importante para manejar transacciones

import sena.jj.com.model.Pedido;
import sena.jj.com.model.DetallePedido;
import sena.jj.com.repository.PedidoRepository;


import java.util.List;
import java.util.Map;

@Service
public class PedidoService {

    @Autowired
    private PedidoRepository pedidoRepository;
    
    // DEBES CREAR DetallePedidoRepository para que esto funcione
    // @Autowired
    // private DetallePedidoRepository detallePedidoRepository; 

    @Transactional // Asegura que todo el proceso se guarda o nada se guarda (Atomicidad)
    public void procesarYGuardar(List<Map<String, Object>> productos) {
        
        // 1. Calcular el Total
        double totalCalculado = productos.stream()
            .mapToDouble(p -> (double) p.get("precio"))
            .sum();

        // 2. Guardar el Encabezado del Pedido
        Pedido nuevoPedido = new Pedido();
        nuevoPedido.setTotal(totalCalculado); // Asume que creaste el setter
        
        // El repositorio guarda en MySQL y devuelve el objeto con el ID generado.
        Pedido pedidoGuardado = pedidoRepository.save(nuevoPedido); 

        // 3. Guardar los Detalles del Pedido
        for (Map<String, Object> producto : productos) {
            DetallePedido detalle = new DetallePedido();
            
            detalle.setPedido(pedidoGuardado); // Enlaza el detalle al ID del pedido recién guardado
            detalle.setNombreProducto((String) producto.get("nombre"));
            detalle.setPrecioUnitario((double) producto.get("precio"));
            
            // detallePedidoRepository.save(detalle); // <--- ESTA LÍNEA GUARDA EN MYSQL
        }
    }
}
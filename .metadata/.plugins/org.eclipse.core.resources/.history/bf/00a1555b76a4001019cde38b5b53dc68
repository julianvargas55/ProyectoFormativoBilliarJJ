package sena.jj.com.config; // 🔑 Este debe ser el paquete FINAL.

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User; // 🔑 Esta línea estaba faltando.
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    // El resto del código está bien para la funcionalidad, pero límpialo de mis comentarios para que compile.
    
    // ... Código de passwordEncoder() ...
    
    // ... Código de userDetailsService() ...
    
    // ... Código de securityFilterChain() ...
}
    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }
    // ...
    @Bean
    public UserDetailsService userDetailsService() {
        UserDetails admin = User.builder() // Esto fallaría sin la importación
                .username("Dueño JJ") 
                // ...
                .build();
        return new InMemoryUserDetailsManager(admin);
    }
    // ...
    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        // ... (El resto de la lógica de redirección y permisos es correcta)
        // ...
        return http.build();
    }
}
package sena.jj.com.controller;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import jakarta.servlet.http.HttpSession;

import sena.jj.com.model.Usuario;
import sena.jj.com.service.IUsuarioService;

@Controller
@RequestMapping("/usuario")
public class UsuarioController {

    private final Logger LOGGER = LoggerFactory.getLogger(UsuarioController.class);

    @Autowired
    private IUsuarioService usuarioService;

    @GetMapping("/registro")
    public String createUser(Model model) {
        model.addAttribute("usuario", new Usuario());
        return "usuario/registro";
    }

    @PostMapping("/save")
    public String save(Usuario usuario, Model model) {
        LOGGER.info("Usuario a registrar: {}", usuario);

        // si no trae tipo, por defecto USER
        if (usuario.getTipo() == null || usuario.getTipo().isBlank()) {
            usuario.setTipo("USER");
        }

        // TODO: en producción encripta la contraseña (BCrypt)
        usuarioService.save(usuario);
        return "redirect:/usuario/login";
    }

    @GetMapping("/login")
    public String login() {
        return "usuario/login";
    }

    // He cambiado a recibir correo y password por RequestParam para evitar binds mal formados
    @PostMapping("/acceder")
    public String acceder(@RequestParam String correo, @RequestParam String password, HttpSession session) {
        LOGGER.info("Intento de acceso: {}", correo);

        Optional<Usuario> userOpt = usuarioService.findByCorreo(correo);
        if (userOpt.isPresent()) {
            Usuario usuarioDb = userOpt.get();
            // compara contraseña (si has encriptado, compara con BCrypt)
            if (usuarioDb.getPassword() != null && usuarioDb.getPassword().equals(password)) {
                session.setAttribute("idUsuario", usuarioDb.getId());
                if ("ADMIN".equalsIgnoreCase(usuarioDb.getTipo())) {
                    return "redirect:/administrador";
                } else {
                    return "redirect:/";
                }
            }
        }
        return "redirect:/usuario/login?error=true";
    }
}
